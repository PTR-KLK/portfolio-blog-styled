{"version":3,"sources":["resources/backgroundNav.png","resources/me.png","resources/colors.resource.js","components/navbar/navbar.style.js","components/footer/footer.style.js","components/footer/footer.component.js","resources/navbar.resource.js","components/navbar/navbar.component.js","resources/projects.resource.js","App.style.js","components/card/card.style.js","components/card/card.component.js","pages/projects.page.js","resources/about.resource.js","pages/about.page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colors","NavContainer","styled","nav","backgroundNav","NavImage","img","NavTitle","h2","NavMenu","props","isVisible","NavMenuItem","Link","NavMenuBtn","button","Container","footer","Footer","href","target","rel","navbar","header","subheader","arr","name","to","Navbar","useState","menuVisible","setMenuVisible","onVisibilityChange","src","Me","alt","onClick","size","icon","faBars","color","map","e","projects","title","demo","repo","image","imageAlt","description","GlobalStyle","createGlobalStyle","FullPageHeight","fullPage","Main","main","Header","h1","Subheader","Paragraph","p","Links","a","Icon","FontAwesomeIcon","CardContainer","section","invertOrder","CardContent","edgeGap","CardTitle","h3","CardLinks","CardSummary","summary","CardParagraph","CardImg","CardIcon","Card","faGithubSquare","faWindowMaximize","Projects","idx","key","about","About","faLinkedin","faEnvelopeSquare","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6de3c7c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundNav.55a4f76a.png\";","module.exports = __webpack_public_path__ + \"static/media/me.4788048f.png\";","export const colors = {\n  primary: \"#485762\",\n  secondary: \"#634957\",\n  light: \"#F5F9E9\",\n  dark: \"#0A0908\",\n  accent: \"#E53D00\",\n  primaryTransparent: \"rgba(72, 87, 98, 0.8)\",\n};\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { colors } from \"../../resources/colors.resource\";\nimport backgroundNav from \"../../resources/backgroundNav.png\";\n\nexport const NavContainer = styled.nav`\n  position: fixed;\n  width: 100vw;\n  top: 0;\n  padding: 0.5em 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${colors.primary};\n  color: ${colors.light};\n\n  @media (min-width: 1024px) {\n    width: 33%;\n    height: 100vh;\n    flex-direction: column;\n    justify-content: center;\n    z-index: 2;\n    background-image: url(${backgroundNav});\n    background-size: cover;\n  }\n\n  @media (min-width: 1440px) {\n    width: 25%;\n  }\n\n  @media (min-width: 2560px) {\n    width: 34%;\n  }\n`;\n\nexport const NavImage = styled.img`\n  width: 2em;\n  height: 2em;\n  border-radius: 50%;\n  margin: 0 0 0 0.5em;\n\n  @media (min-width: 1024px) {\n    width: 10em;\n    height: auto;\n    margin: 0 0 1em 0;\n  }\n`;\n\nexport const NavTitle = styled.h2`\n  margin: 0;\n  font-size: 2em;\n  font-weight: bolder;\n  text-align: center;\n`;\n\nexport const NavMenu = styled.nav`\n  display: ${(props) => (props.isVisible ? \"flex\" : \"none\")};\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  position: fixed;\n  background: ${colors.primaryTransparent};\n  width: 100vw;\n  height: 100vh;\n  z-index: -1;\n\n  @media (min-width: 1024px) {\n    background: none;\n    display: flex;\n    position: static;\n    width: auto;\n    height: auto;\n  }\n`;\n\nexport const NavMenuItem = styled(Link)`\n  text-decoration: none;\n  color: ${colors.light};\n  font-weight: bolder;\n  font-size: 2em;\n  padding: 0.5em 0;\n\n  &:hover {\n    color: ${colors.accent};\n  }\n\n  @media (min-width: 1024px) {\n    display: block;\n    font-size: 1.5em;\n    padding: 0.25em 0;\n  }\n`;\n\nexport const NavMenuBtn = styled.button`\n  margin: 0 0.5em 0 0;\n  background-color: ${colors.primary};\n  border: 0;\n  padding: 0;\n\n  @media (min-width: 1024px) {\n    display: none;\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../resources/colors.resource';\n\n\nexport const Container = styled.footer`\n    display: none;\n\n    @media (min-width: 1024px) {\n        padding: 0.5em 0;\n        font-size: 0.8em;\n        display: block;\n        width: 10em;\n        text-align: center;\n\n        & a {\n            text-decoration: none;\n            color: ${colors.light};\n\n            &:hover{\n                color: ${colors.accent};\n            }\n        }\n    }\n`;","import React from \"react\";\nimport { Container } from \"./footer.style\";\n\nfunction Footer() {\n  return (\n    <Container>\n      <hr></hr>\n      by{\" \"}\n      <a\n        href=\"https://github.com/PTR-KLK\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        PTR-KLK\n      </a>\n      <br />\n      <a\n        href=\"https://github.com/PTR-KLK/portfolio-blog-styled\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        portfolio-blog-styled\n      </a>\n    </Container>\n  );\n}\n\nexport default Footer;\n","export const navbar = {\n  header: \"Site Title\",\n  subheader: \"Some description\",\n  arr: [\n    {\n      name: \"About\",\n      to: \"/stripes-portfolio/\",\n    },\n    {\n      name: \"Projects\",\n      to: \"/stripes-portfolio/projects\",\n    },\n  ],\n};\n","import React, { useState } from \"react\";\nimport {\n  NavContainer,\n  NavImage,\n  NavTitle,\n  NavMenu,\n  NavMenuItem,\n  NavMenuBtn,\n} from \"./navbar.style\";\nimport Footer from \"../footer/footer.component\"\nimport Me from \"../../resources/me.png\";\nimport { navbar } from \"../../resources/navbar.resource\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Navbar() {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const onVisibilityChange = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  return (\n    <NavContainer>\n      <NavImage src={Me} alt=\"Me\" />\n      <NavTitle>{navbar.header}</NavTitle>\n\n      <NavMenuBtn onClick={onVisibilityChange}>\n        <FontAwesomeIcon size=\"2x\" icon={faBars} color=\"#fff\" />\n      </NavMenuBtn>\n      <NavMenu isVisible={menuVisible}>\n        {navbar.arr.map((e) => {\n          return (\n            <NavMenuItem onClick={onVisibilityChange} to={e.to}>\n              {e.name}\n            </NavMenuItem>\n          );\n        })}\n      </NavMenu>\n      <Footer />\n    </NavContainer>\n  );\n}\n\nexport default Navbar;\n","export const projects = {\n  header: \"My projects\",\n  subheader: \"Recent work\",\n  arr: [\n    {\n      title: \"Project #1\",\n      demo: \"https://github.com/PTR-KLK/portfolio-blog-styled\",\n      repo: \"https://github.com/PTR-KLK/portfolio-blog-styled\",\n      image: \"https://via.placeholder.com/1600x900/FFFFFF/000000?text=Project+image\",\n      imageAlt: \"project dsecription\",\n      description:\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odio velit perferendis ut itaque, quasi laudantium voluptate laboriosam nobis nam repudiandae explicabo quaerat deleniti aliquid fugit in quo molestiae maiores totam.\",\n    },\n    {\n      title: \"Project #2\",\n      demo: \"https://github.com/PTR-KLK/portfolio-blog-styled\",\n      repo: \"https://github.com/PTR-KLK/portfolio-blog-styled\",\n      image: \"https://via.placeholder.com/1600x900/FFFFFF/000000?text=Project+image\",\n      imageAlt: \"project dsecription\",\n      description:\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odio velit perferendis ut itaque, quasi laudantium voluptate laboriosam nobis nam repudiandae explicabo quaerat deleniti aliquid fugit in quo molestiae maiores totam.\",\n    },\n    {\n      title: \"Project #3\",\n      demo: \"https://github.com/PTR-KLK/portfolio-blog-styled\",\n      repo: \"https://github.com/PTR-KLK/portfolio-blog-styled\",\n      image: \"https://via.placeholder.com/1600x900/FFFFFF/000000?text=Project+image\",\n      imageAlt: \"project dsecription\",\n      description:\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odio velit perferendis ut itaque, quasi laudantium voluptate laboriosam nobis nam repudiandae explicabo quaerat deleniti aliquid fugit in quo molestiae maiores totam.\",\n    },\n  ],\n};\n","import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { colors } from \"./resources/colors.resource\";\n\nexport const edgeGap = 1;\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background: ${colors.light};\n  }\n`;\n\nexport const FullPageHeight = createGlobalStyle`\n  body main {\n    height: ${(props) => (props.fullPage ? `100vh` : `auto`)};\n  }\n`;\n\nexport const Main = styled.main`\n    padding: 3.75em 0.5em 0.5em;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    @media (min-width: 425px) {\n        padding: 4.25em ${edgeGap}rem ${edgeGap}rem;\n    }\n\n    @media (min-width: 768px) {\n        padding: 5.25em ${edgeGap}rem ${2*edgeGap}rem ${edgeGap}rem;\n    }\n\n    @media (min-width: 1024px) {\n        padding: ${2*edgeGap}rem ${2*edgeGap}rem;\n        width: 67%;\n        position: absolute;\n        top: 0;\n        left: 33%;\n    }\n\n    @media (min-width: 1440px) {\n        width: 50%;\n        left: 25%;\n    }\n\n    @media (min-width: 2560px) {\n      width: 34%;\n      left: 33%;\n    }\n\n`;\n\nexport const Header = styled.h1`\n  width: 100%;\n  margin: 0;\n  padding: 0 0 0.125em 0;\n  color: ${colors.dark};\n`;\n\nexport const Subheader = styled.h2`\n  width: 100%;\n  margin: 0 0 1rem 0;\n  color: ${colors.primary};\n`;\n\nexport const Paragraph = styled.p`\n  width: 100%;\n  margin: ${edgeGap}rem 0;\n  text-align: justify;\n  color: ${colors.dark};\n`;\n\nexport const Links = styled.a`\n  display: flex;\n`;\n\nexport const Icon = styled(FontAwesomeIcon)`\n  color: ${colors.primary};\n  margin: ${edgeGap}rem 0.25rem 0 0;\n\n  &:hover{\n    color: ${colors.accent};\n  }\n  \n`;\n","import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { colors } from \"../../resources/colors.resource\";\nimport { edgeGap } from \"../../App.style\";\n\n\n\nexport const CardContainer = styled.section`\n  margin: 1rem 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  color: ${colors.light};\n  \n  background: ${(props) => props.invertOrder ? colors.secondary : colors.primary};\n`;\n\nexport const CardContent = styled.section`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: ${edgeGap / 2}rem 0 ${edgeGap}rem 0;\n  padding: 0 ${edgeGap}rem;\n\n  @media (min-width: 1024px) {\n    flex-direction: row;\n    padding: 0;\n  }\n`;\n\nexport const CardTitle = styled.h3`\n  text-align: center;\n  font-size: 1.5em;\n  font-weight: bolder;\n  margin: ${edgeGap}rem 0 ${edgeGap / 2}rem 0;\n`;\n\nexport const CardLinks = styled.nav`\n  & > * {\n    margin: 0 0.25em;\n  }\n`;\n\nexport const CardSummary = styled.summary`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  order: 2;\n\n  @media (min-width: 1024px) {\n    width: 50%;\n    justify-content: center;\n    margin: ${(props) =>\n      props.invertOrder\n        ? `auto ${edgeGap / 2}rem auto ${edgeGap}rem`\n        : `auto ${edgeGap}rem auto ${edgeGap / 2}rem`};\n  }\n`;\n\nexport const CardParagraph = styled.p`\n  margin: ${edgeGap}rem 0;\n  text-align: justify;\n\n  @media (min-width: 1024px) {\n    margin: 0 0 ${edgeGap}rem 0;\n  }\n`;\n\nexport const CardImg = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: contain;\n  order: 1;\n\n  @media (min-width: 1024px) {\n    margin: ${(props) =>\n      props.invertOrder\n        ? `auto ${edgeGap}rem auto ${edgeGap / 2}rem`\n        : `auto ${edgeGap / 2}rem auto ${edgeGap}rem`};\n    width: 50%;\n    order: ${(props) => (props.invertOrder ? 3 : 1)};\n  }\n`;\n\nexport const CardIcon = styled(FontAwesomeIcon)`\n  color: ${colors.light};\n\n  &:hover{\n    color: ${colors.accent};\n  }\n\n`;\n","import React from \"react\";\nimport {\n  CardContainer,\n  CardTitle,\n  CardContent,\n  CardImg,\n  CardParagraph,\n  CardSummary,\n  CardLinks,\n  CardIcon,\n} from \"./card.style\";\nimport { faGithubSquare } from \"@fortawesome/free-brands-svg-icons\";\nimport { faWindowMaximize } from \"@fortawesome/free-regular-svg-icons\";\n\nfunction Card(props) {\n  return (\n    <CardContainer invertOrder={props.invertOrder}>\n      <CardTitle>{props.title}</CardTitle>\n      <CardContent>\n        <CardImg\n          invertOrder={props.invertOrder}\n          src={props.image}\n          alt={props.imageAlt}\n        />\n        <CardSummary invertOrder={props.invertOrder}>\n          <CardParagraph>{props.description}</CardParagraph>\n          <CardLinks>\n            <a href={props.repo} target=\"_blank\" rel=\"noopener noreferrer\">\n              <CardIcon size=\"3x\" icon={faGithubSquare} color=\"#333\" />\n            </a>\n            {props.demo ? (\n              <a href={props.demo} target=\"_blank\" rel=\"noopener noreferrer\">\n                <CardIcon size=\"3x\" icon={faWindowMaximize} color=\"#333\" />\n              </a>\n            ) : null}\n          </CardLinks>\n        </CardSummary>\n      </CardContent>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport { projects } from \"../resources/projects.resource\";\nimport { Header, Subheader, FullPageHeight } from \"../App.style\";\nimport Card from \"../components/card/card.component\";\n\nfunction Projects() {\n  return (\n    <>\n      <FullPageHeight fullPage={false} />\n      <Header>{projects.header}</Header>\n      <Subheader>{projects.subheader}</Subheader>\n      {projects.arr.map((e, idx) => {\n        return (\n          <Card\n            key={e.title}\n            invertOrder={idx % 2 === 0 ? 0 : 1}\n            title={e.title}\n            demo={e.demo}\n            repo={e.repo}\n            image={e.image}\n            imageAlt={e.imageAlt}\n            description={e.description}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default Projects;\n","export const about = {\n      header: \"John Doe\",\n      subheader: \"Some description\",\n      linkedin: \"https://github.com/PTR-KLK/portfolio-blog-styled\",\n      github: \"https://github.com/PTR-KLK/portfolio-blog-styled\",\n      mail: \"https://github.com/PTR-KLK/portfolio-blog-styled\",\n      description:\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odio velit perferendis ut itaque, quasi laudantium voluptate laboriosam nobis nam repudiandae explicabo quaerat deleniti aliquid fugit in quo molestiae maiores totam.\",\n};","import React from \"react\";\nimport { FullPageHeight, Header, Subheader, Paragraph, Links , Icon } from \"../App.style\";\nimport { faLinkedin, faGithubSquare } from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelopeSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { about } from \"../resources/about.resource\";\n\nfunction About() {\n  return (\n    <>\n      <FullPageHeight fullPage={true} />\n      <Header>{about.header}</Header>\n      <Subheader>{about.subheader}</Subheader>\n      <Paragraph>\n        {about.description}\n      </Paragraph>\n      <Links>\n      <a\n          href={about.linkedin}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon size=\"4x\" icon={faLinkedin} color=\"#333\" />\n        </a>\n        <a\n          href={about.github}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon size=\"4x\" icon={faGithubSquare} color=\"#333\" />\n        </a>\n        <a\n          href={about.mail}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon size=\"4x\" icon={faEnvelopeSquare} color=\"#333\" />\n        </a>\n      </Links>\n    </>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport Navbar from \"./components/navbar/navbar.component\";\nimport Projects from \"./pages/projects.page\";\nimport About from \"./pages/about.page\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Main, GlobalStyle } from \"./App.style\";\n\nfunction App() {\n  return (\n    <Router>\n      <GlobalStyle />\n      <Navbar />\n      <Switch>\n        <Main>\n          <Route exact path=\"/stripes-portfolio/projects\" component={Projects} />\n          <Route exact path=\"/stripes-portfolio/\" component={About} />\n        </Main>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}